// Mocks generated by Mockito 5.4.5 from annotations
// in home_asset_management/test/modules/homes/presentation/controllers/manage_home_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flutter/material.dart' as _i2;
import 'package:home_asset_management/core/consts/us_states.dart' as _i7;
import 'package:home_asset_management/core/controller/controller_injector.dart'
    as _i3;
import 'package:home_asset_management/modules/homes/data/models/home_model.dart'
    as _i5;
import 'package:home_asset_management/modules/homes/presentation/controllers/homes_controller.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueNotifier_0<T> extends _i1.SmartFake
    implements _i2.ValueNotifier<T> {
  _FakeValueNotifier_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeControllerInstanceInjector_1<T extends Object> extends _i1.SmartFake
    implements _i3.ControllerInstanceInjector<T> {
  _FakeControllerInstanceInjector_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomesController].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomesController extends _i1.Mock implements _i4.HomesController {
  MockHomesController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ValueNotifier<List<_i5.HomeModel>?> get homesNotifier =>
      (super.noSuchMethod(
        Invocation.getter(#homesNotifier),
        returnValue: _FakeValueNotifier_0<List<_i5.HomeModel>?>(
          this,
          Invocation.getter(#homesNotifier),
        ),
      ) as _i2.ValueNotifier<List<_i5.HomeModel>?>);

  @override
  _i3.ControllerInstanceInjector<_i4.HomesController> get injector =>
      (super.noSuchMethod(
        Invocation.getter(#injector),
        returnValue: _FakeControllerInstanceInjector_1<_i4.HomesController>(
          this,
          Invocation.getter(#injector),
        ),
      ) as _i3.ControllerInstanceInjector<_i4.HomesController>);

  @override
  _i6.Future<void> fetchHomes() => (super.noSuchMethod(
        Invocation.method(
          #fetchHomes,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i5.HomeModel?> createHome({
    required String? name,
    required String? streetAddress1,
    required String? streetAddress2,
    required String? city,
    required _i7.UsState? state,
    required String? zip,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createHome,
          [],
          {
            #name: name,
            #streetAddress1: streetAddress1,
            #streetAddress2: streetAddress2,
            #city: city,
            #state: state,
            #zip: zip,
          },
        ),
        returnValue: _i6.Future<_i5.HomeModel?>.value(),
      ) as _i6.Future<_i5.HomeModel?>);

  @override
  _i6.Future<void> updateHome(_i5.HomeModel? home) => (super.noSuchMethod(
        Invocation.method(
          #updateHome,
          [home],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deleteHome(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteHome,
          [id],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void init() => super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
